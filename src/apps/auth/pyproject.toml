[tool.poetry]
name = "auth"
version = "0.1.0"
description = "Microservice of auth"
authors = ["Akuev Anton"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.111.0"
alembic = "^1.13.2"
asyncpg = "^0.29.0"
pyjwt = { extras = ["crypto"], version = "^2.9.0" }
pydantic-settings = "^2.4.0"
psycopg2-binary = "^2.9.9"
bcrypt = "^4.2.0"
cryptography = "^43.0.3"


[tool.poetry.group.dev.dependencies]
flake8-pyproject = "^1.2.3"
flake8 = "^7.1.1"
isort = {extras = ["colors"], version = "^5.13.2"}
black = "^24.8.0"
pre-commit = "^3.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
color = true
line-length = 90
target-version = ["py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
    /(
        | \.pytest_cache
        | \.env.example
        | \.env
        | \__pycache__
        | migrations
    )/
'''

[tool.isort]
profile = "black"
color_output = true
include_trailing_comma = true
line_length = 90
skip = ["__init__.py", ".env", ".env.example"]

[tool.flake8]
exclude = ["migrations", ".git", "__pycache__", "__init__.py", ".env", ".env.example"]
max-line-length = 90
count = true
ignore = ["F821", "E704", "W503"]