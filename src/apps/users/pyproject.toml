[tool.poetry]
name = "user"
version = "0.1.0"
description = "Microservice of users"
authors = ["Akuev Anton"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
alembic = "^1.13.2"
asyncpg = "^0.29.0"
pydantic-settings = "^2.4.0"
psycopg2-binary = "^2.9.9"
bcrypt = "^4.2.0"
fastapi = {extras = ["standart"], version = "^0.115.4"}
uvicorn = "^0.32.0"
httpx = "^0.27.2"
pydantic = {extras = ["email"], version = "^2.9.2"}
pyyaml = "^6.0.2"
dishka = "^1.4.2"


[tool.poetry.group.test.dependencies]
pytest = "^8.3.2"
pytest-asyncio = "^0.24.0"
pytest-alembic = "^0.11.1"


[tool.poetry.group.dev.dependencies]
black = "^24.8.0"
isort = {extras = ["colors"], version = "^5.13.2"}
pre-commit = "^3.8.0"
flake8 = "^7.1.1"
flake8-pyproject = "^1.2.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ----------------------- PYTEST -------------------------
[tool.pytest.ini_options]
pythonpath = ["."]
asyncio_default_fixture_loop_scope = "session"
python_files = ["test*.py", "*test.py"]
python_functions = ["*_test", "test_*"]
norecursedirs = [".env", "migrations"]
asyncio_mode = "auto"
addopts = '-p no:warnings'
testpaths = [
    "tests/unit/test_admin_panels.py",
    "tests/unit/test_profiles.py",
    "tests/migrations/test_migrations.py", # тестирования миграций.
]
# ---------------------------------------------------------

[tool.black]
color = true
line-length = 90
target-version = ["py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
    /(
        | \.pytest_cache
        | \.env.example
        | \.env
        | \__pycache__
        | migrations
    )/
'''

[tool.isort]
profile = "black"
color_output = true
include_trailing_comma = true
line_length = 90
skip = ["__init__.py", ".env", ".env.example"]

[tool.flake8]
exclude = ["migrations", ".git", "__pycache__", "__init__.py", ".env", ".env.example"]
max-line-length = 90
count = true
ignore = ["F821", "E704", "W503"]