.script:lint:
  before_script:
    - |
      apk add --no-cache curl
      cd ${WORKING_DIR}
      echo "Переход в директорию ${WORKING_DIR}"
      echo "Скачивание Poetry..."
      curl -sSL https://install.python-poetry.org | \
            POETRY_HOME=${CI_PROJECT_DIR}/${WORKING_DIR}/poetry python3 - --version 1.8.3
      export PATH="${CI_PROJECT_DIR}/${WORKING_DIR}/poetry/bin:$PATH"
      poetry config virtualenvs.in-project true
      poetry install --no-root
  script:
    - |
      poetry run black --check --diff \
                       --extend-exclude="poetry" \
                       --extend-exclude=".venv" \
                       --extend-exclude="migrations" .
      poetry run isort --check-only --diff \
                       --extend-skip-glob="poetry" \
                       --extend-skip-glob=".venv" \
                       --extend-skip-glob="migrations" .
      poetry run flake8 --exclude="poetry,.venv,migrations" .


.script:check-build:
  script:
    - /kaniko/executor
      --context $PATH_WORKING_DIR
      --dockerfile $PATH_DOCKER_FILE
      --no-push


.script:build:
  script:
    - /kaniko/executor
      --context $PATH_WORKING_DIR
      --dockerfile $PATH_DOCKER_FILE
      --destination $APP_IMAGE
      --destination $APP_IMAGE_LATEST

# Деплой не доделан! Нужно реализовать отправку новой версии образа приложения
# на удаленный сервер. Если в новой версии возникнет ошибка откатить на предыдущую
# версию приложения.
# p.s.
# Откаты версий и всё в этом роде лучше делать с помощью Кубера, но пока что будут костыли.
.script:deploy:
  before_script:
    # Переменная тип File: SSH_PRIVATE_KEY SSH_KNOWN_HOSTS  и CI_PASSWORD.
    # Переменная тип Variable: CI_PASSWORD.
    # Эти переменные находятся в GitLab - Settings -> CI/CD -> Variables.
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cat "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
    - chmod 400 ~/.ssh/id_ed25519
    - cat "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - cd $PROJECT_PATH
    - echo "$CI_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
  script:
    - ...
